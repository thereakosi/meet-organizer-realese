import React, { useState } from "react";
import Calendar from "react-calendar";
import "react-calendar/dist/Calendar.css";

const CalendarView = ({ meetings = [] }) => {
  const [selectedDate, setSelectedDate] = useState(new Date());

  // –§—É–Ω–∫—Ü–∏—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–∞—Ç—ã –±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏
  const isSameDay = (date1, date2) => {
    return (
      date1.getFullYear() === date2.getFullYear() &&
      date1.getMonth() === date2.getMonth() &&
      date1.getDate() === date2.getDate()
    );
  };

  // –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∏ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É
  const filteredMeetings = meetings.filter((meeting) =>
    isSameDay(new Date(meeting.date), selectedDate)
  );

  return (
    <div className="container mt-5">
      <h2 className="mb-4">
        <span role="img" aria-label="calendar">üìÖ</span> –ö–∞–ª–µ–Ω–¥–∞—Ä—å –≤—Å—Ç—Ä–µ—á
      </h2>

      <div className="row">
        {/* –ö–∞–ª–µ–Ω–¥–∞—Ä—å —Å–ª–µ–≤–∞ */}
        <div className="col-md-4 mb-4">
          <Calendar
            onChange={setSelectedDate}
            value={selectedDate}
            className="w-100"
          />
        </div>

        {/* –°–ø–∏—Å–æ–∫ –≤—Å—Ç—Ä–µ—á —Å–ø—Ä–∞–≤–∞ */}
        <div className="col-md-8">
          <h5 className="mb-3">
            –í—Å—Ç—Ä–µ—á–∏ –Ω–∞ {selectedDate.toLocaleDateString("ru-RU")}:
          </h5>

          {filteredMeetings.length === 0 ? (
            <p className="text-muted">–ù–µ—Ç –≤—Å—Ç—Ä–µ—á –Ω–∞ —ç—Ç—É –¥–∞—Ç—É.</p>
          ) : (
            <ul className="list-group">
              {filteredMeetings
                .sort((a, b) => new Date(a.date) - new Date(b.date))
                .map((meeting, index) => (
                  <li key={index} className="list-group-item">
                    <div className="d-flex justify-content-between align-items-center mb-1">
                      <strong>{meeting.title}</strong>
                      <span className="text-muted">
                        üïí {new Date(meeting.date).toLocaleTimeString([], { hour: "2-digit", minute: "2-digit" })}
                      </span>
                    </div>
                    <p className="mb-1">{meeting.description}</p>

                    <div className="mb-1">
                      <span className={`badge me-2 ${meeting.category === "important" ? "bg-danger" :
                        meeting.category === "personal" ? "bg-warning text-dark" : "bg-success"}`}>
                        {meeting.category === "important" && "–í–∞–∂–Ω–æ"}
                        {meeting.category === "personal" && "–õ–∏—á–Ω–æ–µ"}
                        {meeting.category === "work" && "–†–∞–±–æ—á–µ–µ"}
                      </span>

                      <span className="badge bg-info text-dark">
                        {meeting.type === "online" ? "–û–Ω–ª–∞–π–Ω" : "–û—Ñ—Ñ–ª–∞–π–Ω"}
                      </span>
                    </div>

                    {meeting.type === "online" && meeting.LocationOrLink && (
                      <p className="mb-0">
                        <strong>–°—Å—ã–ª–∫–∞: </strong>
                        <a href={meeting.LocationOrLink} target="_blank" rel="noopener noreferrer">
                          –ü–µ—Ä–µ–π—Ç–∏
                        </a>
                      </p>
                    )}

                    {meeting.type === "offline" &&
  typeof meeting.LocationOrLink === "object" &&
  "lat" in meeting.LocationOrLink &&
  "lng" in meeting.LocationOrLink && (
    <p>
      <strong>–ê–¥—Ä–µ—Å: </strong>
      <a
        href={`https://2gis.kz/almaty/geo/${meeting.LocationOrLink.lng},${meeting.LocationOrLink.lat}`}

        target="_blank"
        rel="noopener noreferrer"
      >
        –û—Ç–∫—Ä—ã—Ç—å –≤ 2GIS
      </a>
    </p>
)}
                  </li>
                ))}
            </ul>
          )}
        </div>
      </div>
    </div>
  );
};

export default CalendarView;
